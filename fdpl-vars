echo "... Set vars"

SCRIPT=$(basename $0)

# parameters for build and install
ARCH=amd64
DIST=bookworm
# During install, root password is copied.
# Take default if there is no root password.
DEFAULT_ROOT_PASSWORD=debian

# New hostnames
NEW_BUILD_HOSTNAME=$(hostname)-build
NEW_INSTALL_HOSTNAME=$(hostname)-cloned

# Folders, files
FDPL_FOLDER=/root/fdpl-debian
MOUNT_FOLDER=/mnt/fdpl-debian
TARFILE=fdpl-debian-$DIST-$ARCH.tar
LB_FOLDER_NAME=lb
LOCAL_FOLDER_NAME=local
LOG_FOLDER_NAME=log
LOG_FILE_BASENAME=$SCRIPT.$EPOCHSECONDS.log
# Generated names
LB_FOLDER=$FDPL_FOLDER/$LB_FOLDER_NAME
LOCAL_FOLDER=$FDPL_FOLDER/$LOCAL_FOLDER_NAME
LOG_FOLDER=$FDPL_FOLDER/$LOG_FOLDER_NAME
LOGFILE=$LOG_FOLDER/$LOG_FILE_BASENAME
NEW_FDPL_FOLDER=$MOUNT_FOLDER/.$FDPL_FOLDER
NEW_LB_FOLDER=$MOUNT_FOLDER/.$LB_FOLDER
NEW_LOCAL_FOLDER=$MOUNT_FOLDER/.$LOCAL_FOLDER
NEW_LOG_FOLDER=$MOUNT_FOLDER/.$LOG_FOLDER
NEW_LOGFILE=$NEW_LOG_FOLDER/$LOG_FILE_BASENAME

# GIT repo for updates
BRANCH=teco
URL=https://github.com/tecoboot/fdpl-debian/archive/refs/heads/$BRANCH.zip

### init scripts ###

function die() {
	echo "$@"
	exit 1
}

if [ "$USER" != "root" ]; then
  die "Not root, needed for building Live Debian"
fi

# All parameters above can be adjusted in fdpl-debian.conf
# This file is cloned as wel, to here basic permutations can be made.
if [ -e $FDPL_FOLDER/fdpl-debian.conf ]; then
  echo "...... Set local vars from fdpl-debian.conf"
  source $FDPL_FOLDER/fdpl-debian.conf
else
  echo "...... No fdpl-debian.conf local vars file"
  echo "...... Create a default one"
  echo "# Default fdpl-debian.conf file" >$FDPL_FOLDER/fdpl-debian.conf
fi

mkdir -p $LOG_FOLDER
